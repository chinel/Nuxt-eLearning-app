datasource db {
    provider  = "postgresql"
    url       = env("DATABASE_URL")
    directUrl = env("DIRECT_URL")
}

generator client {
    provider      = "prisma-client-js"
    binaryTargets = ["native", "darwin-arm64"]
    output        = "client" // this is used, if you are using pnpm. Because we used the shamefully hoist with pnpm with nuxt3, so then the structure of the node module folder is different from what prisma is expecting
}

model Course {
    id        Int       @id @default(autoincrement())
    title     String
    chapters  Chapter[]
    createdAt DateTime  @default(now())
    updatedAt DateTime  @updatedAt
}

model Chapter {
    id        Int      @id @default(autoincrement())
    title     String
    slug      String
    number    Int
    lessons   Lesson[]
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    Course    Course   @relation(fields: [courseId], references: [id])
    courseId  Int
}

model Lesson {
    id             Int              @id @default(autoincrement())
    title          String
    downloadUrl    String
    number         Int
    videoId        Int
    text           String
    slug           String
    sourceUrl      String? //the ? means this field is optional
    createdAt      DateTime         @default(now())
    updatedAt      DateTime         @updatedAt
    Chapter        Chapter          @relation(fields: [chapterId], references: [id])
    chapterId      Int
    LessonProgress LessonProgress[]
}

model LessonProgress {
    id        Int      @id @default(autoincrement())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    completed Boolean  @default(false)
    Lesson    Lesson   @relation(fields: [lessonId], references: [id])
    lessonId  Int
    userEmail String

    @@unique([lessonId, userEmail]) // every row containing lessonId & userEmail has to be unique
}
